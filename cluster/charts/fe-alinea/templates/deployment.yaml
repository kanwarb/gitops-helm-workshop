apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "nuxeo.fullname" . }}
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
  labels:
    draft: {{ default "draft-app" .Values.nuxeo.draft }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  replicas: {{ .Values.nuxeo.replicaCount }}
  template:
    metadata:
      labels:
        draft: {{ default "draft-app" .Values.nuxeo.draft }}
        app: {{ template "nuxeo.fullname" . }}
{{- if .Values.nuxeo.podAnnotations }}
      annotations:
{{ toYaml .Values.nuxeo.podAnnotations | indent 8 }}
{{- end }}
    spec:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
      containers:
      - name: "sidecar"
        resources:
          requests:
            memory: "1Gi"
            cpu: 250m
          limits:
            memory: "1Gi"
            cpu: 250m
        image: "608150934281.dkr.ecr.us-west-2.amazonaws.com/alinea-nx-custom-webui-image:latest"
        imagePullPolicy: "Always"
        volumeMounts:
          - name: nuxeoshare
            mountPath: /entrypoint-initnuxeo.d/
        lifecycle:
          postStart:
            exec:
              command:
                - "sh"
                - "-c"
                - >
                  echo "export http_proxy=http://proxy.config.pcp.local:3128" > /docker-entrypoint-initnuxeo.d/sh.local ;
                  echo "export https_proxy=http://proxy.config.pcp.local:3128" >> /docker-entrypoint-initnuxeo.d/sh.local ;
                  echo "export NO_PROXY=100.115.80.0/20,10.100.0.0/16,localhost,127.0.0.1,169.254.169.254,.apple.com,.internal,amazonlinux.us-west-2.amazonaws.com,cloudformation.us-west-2.amazonaws.com,cloudtrail.us-west-2.amazonaws.com,codebuild.us-west-2.amazonaws.com,codebuild-fips.us-west-2.amazonaws.com,config.us-west-2.amazonaws.com,dynamodb.us-west-2.amazonaws.com,ec2.us-west-2.amazonaws.com,ec2messages.us-west-2.amazonaws.com,elasticloadbalancing.us-west-2.amazonaws.com,events.us-west-2.amazonaws.com,.execute-api.us-west-2.amazonaws.com,kinesis.us-west-2.amazonaws.com,kms.us-west-2.amazonaws.com,logs.us-west-2.amazonaws.com,monitoring.us-west-2.amazonaws.com,api.sagemaker.us-west-2.amazonaws.com,runtime.sagemaker.us-west-2.amazonaws.com,secretsmanager.us-west-2.amazonaws.com,servicecatalog.us-west-2.amazonaws.com,sns.us-west-2.amazonaws.com,ssm.us-west-2.amazonaws.com,ssmmessages.us-west-2.amazonaws.com,sts.us-west-2.amazonaws.com,.s3.us-west-2.amazonaws.com,.us-west-2.vpce.amazonaws.com,us-west-2.vpce.amazonaws.com"  >> /docker-entrypoint-initnuxeo.d/sh.local ;
                  echo "export no_proxy=100.115.80.0/20,10.100.0.0/16,localhost,127.0.0.1,169.254.169.254,.apple.com,.internal,amazonlinux.us-west-2.amazonaws.com,cloudformation.us-west-2.amazonaws.com,cloudtrail.us-west-2.amazonaws.com,codebuild.us-west-2.amazonaws.com,codebuild-fips.us-west-2.amazonaws.com,config.us-west-2.amazonaws.com,dynamodb.us-west-2.amazonaws.com,ec2.us-west-2.amazonaws.com,ec2messages.us-west-2.amazonaws.com,elasticloadbalancing.us-west-2.amazonaws.com,events.us-west-2.amazonaws.com,.execute-api.us-west-2.amazonaws.com,kinesis.us-west-2.amazonaws.com,kms.us-west-2.amazonaws.com,logs.us-west-2.amazonaws.com,monitoring.us-west-2.amazonaws.com,api.sagemaker.us-west-2.amazonaws.com,runtime.sagemaker.us-west-2.amazonaws.com,secretsmanager.us-west-2.amazonaws.com,servicecatalog.us-west-2.amazonaws.com,sns.us-west-2.amazonaws.com,ssm.us-west-2.amazonaws.com,ssmmessages.us-west-2.amazonaws.com,sts.us-west-2.amazonaws.com,.s3.us-west-2.amazonaws.com,.us-west-2.vpce.amazonaws.com,us-west-2.vpce.amazonaws.com" >>  /docker-entrypoint-initnuxeo.d/sh.local ;
                  /bin/cp -rp /docker-entrypoint-initnuxeo.d/* /entrypoint-initnuxeo.d/
        command: ["/bin/sh", "-ec", "while :; do echo '.'; sleep 5 ; done"]
      - name: {{ .Chart.Name }}
        annotations:
          iam.amazonaws.com/role: arn:aws:iam::608150934281:role/nuxtest-iam-stack-NodeInstanceRole-MTB3F8ZTW3GT
        resources:
          requests:
            memory: "{{ .Values.nuxeo.resources.requests.memory }}"
            cpu: "{{ .Values.nuxeo.resources.requests.cpu }}"
          limits:
            memory: "{{ .Values.nuxeo.resources.limits.memory }}"
            cpu: "{{ .Values.nuxeo.resources.limits.cpu }}"
        image: "{{ .Values.nuxeo.image.repository }}:{{ .Values.nuxeo.image.tag }}"
        imagePullPolicy: {{ .Values.nuxeo.image.pullPolicy }}
        securityContext:
          runAsUser: 0
          allowPrivilegeEscalation: true
        ports:
        - containerPort: {{ .Values.nuxeo.service.internalPort }}
        livenessProbe:
          httpGet:
            path: {{ .Values.nuxeo.probePath }}
            port: {{ .Values.nuxeo.service.internalPort }}
          initialDelaySeconds: {{ .Values.nuxeo.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.nuxeo.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.nuxeo.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.nuxeo.livenessProbe.timeoutSeconds }}
        readinessProbe:
          httpGet:
            path: {{ .Values.nuxeo.probePath }}
            port: {{ .Values.nuxeo.service.internalPort }}
          initialDelaySeconds: {{ .Values.nuxeo.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.nuxeo.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.nuxeo.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.nuxeo.readinessProbe.timeoutSeconds }}
        env:
        - name: http_proxy
          value: "http://proxy.config.pcp.local:3128"
        - name: https_proxy
          value: "http://proxy.config.pcp.local:3128"
        - name: NO_PROXY
          value: "100.115.80.0/20,10.100.0.0/16,localhost,127.0.0.1,169.254.169.254,.apple.com,.internal,amazonlinux.us-west-2.amazonaws.com,cloudformation.us-west-2.amazonaws.com,cloudtrail.us-west-2.amazonaws.com,codebuild.us-west-2.amazonaws.com,codebuild-fips.us-west-2.amazonaws.com,config.us-west-2.amazonaws.com,dynamodb.us-west-2.amazonaws.com,ec2.us-west-2.amazonaws.com,ec2messages.us-west-2.amazonaws.com,elasticloadbalancing.us-west-2.amazonaws.com,events.us-west-2.amazonaws.com,.execute-api.us-west-2.amazonaws.com,kinesis.us-west-2.amazonaws.com,kms.us-west-2.amazonaws.com,logs.us-west-2.amazonaws.com,monitoring.us-west-2.amazonaws.com,api.sagemaker.us-west-2.amazonaws.com,runtime.sagemaker.us-west-2.amazonaws.com,secretsmanager.us-west-2.amazonaws.com,servicecatalog.us-west-2.amazonaws.com,sns.us-west-2.amazonaws.com,ssm.us-west-2.amazonaws.com,ssmmessages.us-west-2.amazonaws.com,sts.us-west-2.amazonaws.com,.s3.us-west-2.amazonaws.com,.us-west-2.vpce.amazonaws.com,us-west-2.vpce.amazonaws.com"
        - name: no_proxy
          value: "100.115.80.0/20,10.100.0.0/16,localhost,127.0.0.1,169.254.169.254,.apple.com,.internal,amazonlinux.us-west-2.amazonaws.com,cloudformation.us-west-2.amazonaws.com,cloudtrail.us-west-2.amazonaws.com,codebuild.us-west-2.amazonaws.com,codebuild-fips.us-west-2.amazonaws.com,config.us-west-2.amazonaws.com,dynamodb.us-west-2.amazonaws.com,ec2.us-west-2.amazonaws.com,ec2messages.us-west-2.amazonaws.com,elasticloadbalancing.us-west-2.amazonaws.com,events.us-west-2.amazonaws.com,.execute-api.us-west-2.amazonaws.com,kinesis.us-west-2.amazonaws.com,kms.us-west-2.amazonaws.com,logs.us-west-2.amazonaws.com,monitoring.us-west-2.amazonaws.com,api.sagemaker.us-west-2.amazonaws.com,runtime.sagemaker.us-west-2.amazonaws.com,secretsmanager.us-west-2.amazonaws.com,servicecatalog.us-west-2.amazonaws.com,sns.us-west-2.amazonaws.com,ssm.us-west-2.amazonaws.com,ssmmessages.us-west-2.amazonaws.com,sts.us-west-2.amazonaws.com,.s3.us-west-2.amazonaws.com,.us-west-2.vpce.amazonaws.com,us-west-2.vpce.amazonaws.com"
{{- if .Values.nuxeo.clid }}
        - name: NUXEO_CLID
          valueFrom:
            secretKeyRef:
              name: {{ template "nuxeo.fullname" . }}-instance-clid
              key: CLID
{{- end }}
        - name: NUXEO_PACKAGES
          value: {{ .Values.nuxeo.packages }}
{{- if .Values.nuxeo.custom_envs }}
{{ toYaml .Values.nuxeo.custom_envs | indent 8 }}
{{- end }}
        envFrom:
{{- if .Values.nuxeo.custom_envsFrom }}
{{ toYaml .Values.nuxeo.custom_envsFrom | indent 8 }}
{{- end }}
        volumeMounts:
          - name: nfsshare
            mountPath: /alinea-nx/
          - name: nuxeoshare
            mountPath: /entrypoint-initnuxeo.d/
          - name: nuxeoconf
            mountPath: /docker-entrypoint-initnuxeo.d/
          - name: connect-secret
            mountPath: /opt/nuxeo/connect/
          - name: log
            mountPath: /var/log/nuxeo
          - name: binaries
            mountPath: /binaries
          - name: awsfile
            mountPath: /var/log/aws
        lifecycle:
          postStart:
            exec:
              command:
                - "sh"
                - "-c"
                - >
                  export NEW_UUID=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 8);
                  sed -i "s/nuxeo.cluster.nodeid=/nuxeo.cluster.nodeid=$NEW_UUID/g" /etc/nuxeo/nuxeo.conf;
                  sed -i "s/nuxeo.server.jvmRoute=/nuxeo.server.jvmRoute=node$NEW_UUID/g" /etc/nuxeo/nuxeo.conf;
                  sed -i "s/nuxeo.tmp.dir=\/alinea-nx\/tmp/nuxeo.tmp.dir=\/alinea-nx\/tmp\/$NEW_UUID/g" /etc/nuxeo/nuxeo.conf
      initContainers:
{{- if or .Values.elasticsearch.deploy .Values.tags.elasticsearch }}
      - name: init-elasticsearch
        image: busybox
        command: ['sh', '-c', 'until nc -w1 {{ .Release.Name }}-elasticsearch-client 9200; do echo "waiting for elastic"; sleep 2; done;']
{{- end }}
{{- if or .Values.mongodb.deploy .Values.tags.mongodb }}
      - name: init-mongodb
        image: busybox
        command: ['sh', '-c', 'until nc -w1 {{ .Release.Name }}-mongodb 27017; do echo "waiting for mongodb"; sleep 2; done;']
{{- end }}
{{- if or .Values.postgresql.deploy .Values.tags.postgresql }}
      - name: init-postgresql
        image: busybox
        command: ['sh', '-c', 'until nc -w1 {{ .Release.Name }}-postgresql 5432; do echo "waiting for postgresql"; sleep 2; done;']
{{- end }}
{{- if or .Values.kafka.deploy .Values.tags.kafka}}
      - name: init-kafka
        image: busybox
        command: ['sh', '-c', 'until nc -w1 {{ .Release.Name }}-kafka-headless 9092; do echo "waiting for kafka"; sleep 2; done;']
{{- end }}
      securityContext:
        fsGroup: 0
      volumes:
      - name: nfsshare
        persistentVolumeClaim:
          claimName: binshare-pvc
      - name: awsfile
        hostPath: 
          path: /usr/bin/aws
      - name: nuxeoshare
        emptyDir: {}
      - name: nuxeoconf
        configMap:
          name: {{ template "nuxeo.fullname" . }}-conf
      - name: connect-secret
        secret:
          secretName: {{ template "nuxeo.fullname" . }}-connect
      - name: binaries
        {{- if .Values.nuxeo.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "nuxeo.fullname" . }}-binaries
        {{- else }}
        emptyDir: {}
        {{- end }}
      - name: log
        {{- if .Values.nuxeo.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "nuxeo.fullname" . }}-log
        {{- else }}
        emptyDir: {}
        {{- end }}
