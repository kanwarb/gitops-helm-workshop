apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "nuxeo.fullname" . }}-conf
  labels:
    app: {{ template "nuxeo.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    role: config
data:
  nuxeo.conf: |-
    # Additional nuxeo.conf parameters
    nuxeo.stream.work.log.codec=avro
    nuxeo.stream.audit.log.codec=avro
    nuxeo.stream.pubsub.log.codec=avro
{{- if or .Values.mongodb.deploy .Values.tags.mongodb }}
    nuxeo.templates=default,mongodb
    nuxeo.mongodb.server=mongodb://{{ .Release.Name }}-mongodb:27017
    nuxeo.mongodb.dbname={{ .Values.nuxeo.mongodb.dbname }}
{{- end }}
{{- if or .Values.postgresql.deploy .Values.tags.postgresql }}
    nuxeo.templates=default,postgresql
    nuxeo.db.name={{ .Values.nuxeo.postgresql.dbname }}
    nuxeo.db.user={{ .Values.nuxeo.postgresql.username }}
    nuxeo.db.password={{ .Values.nuxeo.postgresql.password }}
    nuxeo.db.host={{ .Release.Name }}-postgresql
    nuxeo.db.port=5432
{{- end }}
{{- if or .Values.elasticsearch.deploy .Values.tags.elasticsearch }}
    elasticsearch.client=RestClient
    elasticsearch.clusterName={{ .Values.nuxeo.elasticsearch.clusterName }}
    elasticsearch.httpReadOnly.baseUrl={{ .Values.nuxeo.elasticsearch.httpReadOnly.baseUrl }}
    elasticsearch.addressList={{ .Values.nuxeo.elasticsearch.addressList }}
    elasticsearch.indexName={{ .Values.nuxeo.elasticsearch.indexName }}
    elasticsearch.restClient.connectionTimeoutMs={{ .Values.nuxeo.elasticsearch.restClient.connectionTimeoutMs }}
    elasticsearch.restClient.socketTimeoutMs={{ .Values.nuxeo.elasticsearch.restClient.connectionTimeoutMs }}
{{- end }}
{{- if or .Values.kafka.deploy .Values.tags.kafka}}
    kafka.enabled=true
    kafka.bootstrap.servers={{ .Release.Name }}-kafka-headless:9092
    nuxeo.stream.work.enabled=true
    nuxeo.pubsub.provider=stream
{{- end }}
{{- if or .Values.mongodb.deploy .Values.tags.mongodb }}
    nuxeo.templates=default,mongodb
{{- else if or  .Values.postgresql.deploy  .Values.tags.postgresql }}
    nuxeo.templates=default,postgresql
{{- else }}
    nuxeo.templates=default
{{- end }}
{{- if .Values.nuxeo.custom_params }}
{{ .Values.nuxeo.custom_params | indent 4 }}
{{- end }}
  init.sh: |
    #!/bin/sh
    cp /entrypoint-initnuxeo.d/aws-java-sdk-cloudfront-1.11.516.jar /opt/nuxeo/server/nxserver/lib
    cp /entrypoint-initnuxeo.d/aws-java-sdk-core-1.11.516.jar /opt/nuxeo/server/nxserver/lib
    cp /entrypoint-initnuxeo.d/aws-java-sdk-kms-1.11.516.jar /opt/nuxeo/server/nxserver/lib
    cp /entrypoint-initnuxeo.d/aws-java-sdk-s3-1.11.516.jar /opt/nuxeo/server/nxserver/lib
    cp /entrypoint-initnuxeo.d/aws-java-sdk-sts-1.11.516.jar /opt/nuxeo/server/nxserver/lib
    cp /entrypoint-initnuxeo.d/nuxeo-runtime-aws-10.10.jar /opt/nuxeo/server/nxserver/lib
    nuxeoctl mp-install /entrypoint-initnuxeo.d/custom-web-ui-marketplace-package-3.2.zip --relax=false --accept=true
    nuxeoctl mp-install /entrypoint-initnuxeo.d/CustomRestAPI-marketplace-package-1.0.zip --relax=false --accept=true
    nuxeoctl mp-install /entrypoint-initnuxeo.d/marketplace-1.9.7-SNAPSHOT.zip --relax=false --accept=true
    nuxeoctl mp-install /entrypoint-initnuxeo.d/marketplace-1.0.zip --relax=false --accept=true
    nuxeoctl mp-install /entrypoint-initnuxeo.d/easyshare-1.5.3.zip --relax=false --accept=true
    nuxeoctl mp-install /entrypoint-initnuxeo.d/nuxeo-spreadsheet-1.4.3.zip --relax=false --accept=true
    nuxeoctl mp-remove nuxeo-dam
    nuxeoctl mp-install /entrypoint-initnuxeo.d/nuxeo-showcase-content-1.3.3.zip /entrypoint-initnuxeo.d/nuxeo-dam-6.4.3.zip --relax=false --accept=true
    nuxeoctl mp-install /entrypoint-initnuxeo.d/rendition-extensions-marketplace-package-1.0.zip --relax=false --accept=true
    nuxeoctl mp-install /entrypoint-initnuxeo.d/nuxeo-vision-marketplace-1.2.4-SNAPSHOT.zip --relax=false --accept=true
    nuxeoctl mp-install /entrypoint-initnuxeo.d/nuxeo-platform-3d-1.2.3.zip --relax=false --accept=true
    cp /entrypoint-initnuxeo.d/nuxeo-core-binarymanager-s3-10.10.jar /opt/nuxeo/server/nxserver/bundles/
    cp /entrypoint-initnuxeo.d/custom-s3-rest-api-0.1-SNAPSHOT.jar /opt/nuxeo/server/nxserver/bundles/
    cp /entrypoint-initnuxeo.d/aws-java-sdk-rekognition-1.11.475.jar /opt/nuxeo/server/nxserver/lib
    cp /entrypoint-initnuxeo.d/nuxeo-core-binarymanager-s3-10.10.jar /opt/nuxeo/server/nxserver/bundles/
    echo $NUXEO_CONNECT_USERNAME;
    if [ ! -f $NUXEO_DATA/instance.clid -a -f /opt/nuxeo/connect/connect.properties ]; then
      . /opt/nuxeo/connect/connect.properties
      if [ -n "$NUXEO_CONNECT_USERNAME" -a -n "$NUXEO_CONNECT_PASSWORD" -a -n "$NUXEO_STUDIO_PROJECT" ]; then
        echo "---> Registering instance on connect"
        nuxeoctl register $NUXEO_CONNECT_USERNAME $NUXEO_STUDIO_PROJECT dev helm $NUXEO_CONNECT_PASSWORD
      fi
    fi
