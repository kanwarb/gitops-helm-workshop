nuxeo:
  image:
    repository: nuxeo/nuxeo
    tag: latest
    pullPolicy: Always
  replicaCount: 1
  resources:
    requests:
      memory: 4Gi
      cpu: 1.5
    limits:
      memory: 6Gi
      cpu: 1.5
  service:
    traffic: Local
    type: NodePort
    externalPort: 8080
    internalPort: 8080
  probePath: /nuxeo/runningstatus
  livenessProbe:
    initialDelaySeconds: 200
    periodSeconds: 20
    successThreshold: 1
    failureThreshold: 5
    timeoutSeconds: 10
  readinessProbe:
    periodSeconds: 20
    initialDelaySeconds: 100
    successThreshold: 1
    timeoutSeconds: 10
    failureThreshold: 5
  terminationGracePeriodSeconds: 10
  mongodb:
    dbname: nuxeo
    backup:
      enable: false
      schedule: "0 0 */3 * *"
      aws:
        bucket: "cxdn-mongo-backup-bucket"
        secret: "cxdn-mongo-backup-aws-secret"
  postgresql:
    dbname: nuxeo
    username: nuxeo
    password: nuxeo
  elasticsearch:
    clusterName: nuxtest
    indexName: nuxeo
    deploy: false
  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: nginx
  persistence:
    enabled: false
    storageClass: standard
    size:
      binaries: 10Gi
      tmp: 10Gi
      start: 40Gi
    annotations: 
    #packages: nuxeo-web-ui
  custom_params: |-
    org.nuxeo.connect.server.reachable=false
    nuxeo.tmp.dir=/alinea-nx/tmp
    nuxeo.nginx.accel.enabled=true
    nuxeo.http.proxy.host=proxy.config.pcp.local
    nuxeo.http.proxy.port=3128
    nuxeo.http.proxy.type=anonymous
    org.nuxeo.vision.default.provider=aws
    nuxeo.csrf.token.enabled=true
    nuxeo.server.jvmRoute=
    nuxeo.loopback.url=http://localhost:8080
    nuxeo.node.isWorker=false
    nuxeo.core.binarymanager=org.nuxeo.ecm.core.storage.sql.S3BinaryManager
    nuxeo.dbs.cache.ttl=10
    nuxeo.dbs.cache.concurrencyLevel=10
    nuxeo.dbs.cache.maxSize=1000
    nuxeo.dbs.cache.enabled=false
    nuxeo.aws.region=us-west-2
    nuxeo.s3storage.bucket=dev-alin-kb-p-5i6v90nxqf
    nuxeo.s3storage.transient.bucket=dev-alin-kb-t-pgpl4u5ykg
    nuxeo.s3storage.transient.region=us-west-2
    nuxeo.s3storage.region=us-west-2
    nuxeo.s3storage.directdownload=true
    nuxeo.s3storage.cachesize=10TB
    nuxeo.s3storage.cachecount=10000
    nuxeo.s3storage.cacheminage=36000
    nuxeo.server.http.connectionUploadTimeout=120000
    nuxeo.s3storage.useDirectUpload=true
    nuxeo.s3storage.connection.retry=3
    nuxeo.s3storage.connection.timeout=50000
    nuxeo.s3storage.socket.timeout=50000
    nuxeo.s3storage.transient.absoluteMaxSizeMB=-1
    nuxeo.s3storage.transient.firstlevelTTL=120
    nuxeo.s3storage.transient.secondlevelTTL=10
    nuxeo.s3storage.transient.cachesize=10TB
    nuxeo.s3storage.transient.cacheminage=36000
    nuxeo.s3storage.transient.connection.max=50
    nuxeo.s3storage.transient.connection.retry=3
    nuxeo.s3storage.transient.connection.timeout=50000
    nuxeo.s3storage.transient.socket.timeout=50000
    nuxeo.db.transactiontimeout=18000
    org.nuxeo.dnd.upload.timeout=120000
    org.nuxeo.dnd.exec.timeout=120000
    nuxeo.s3storage.connection.max=50
    nuxeo.s3storage.transient.roleArn=arn:aws:iam::608150934281:role/nuxtest-iam-stack-NodeInstanceRole-MTB3F8ZTW3GT
    nuxeo.s3storage.transient.policyTemplate={"Version":"2012-10-17","Statement":[{"Effect":"Allow","Action":"s3:PutObject","Resource":["arn:aws:s3:::${nuxeo.s3storage.transient.bucket}/*"]}]}
    #nuxeo.s3storage.transient.roleArn=arn:aws:iam::608150934281:role/TestEC2WithSSM-InstanceRole-1QAUL6F4DXN0P
    #nuxeo.aws.secretKey="bEtN7ultx9K50G1K8NnYDMC/YLnfkysETfAhVFkw"
    #nuxeo.aws.accessKeyId="ASIAY3GE62MEVID7SY4H"
    nuxeo.mongodb.dbname=nuxeo-kube
    nuxeo.mongodb.server=mongodb://nuxeokube_user:nuxeokub@100.115.90.121:27017/nuxeo-kube
    nuxeo.cluster.enabled=true
    nuxeo.cluster.nodeid=
    repository.clustering.enabled=true 
    repository.clustering.delay=1000 
    repository.clustering.invalidation=default
    repository.clustering.id=101
    nuxeo.stream.work.enabled=true 
    nuxeo.stream.work.log.config=work
    nuxeo.stream.work.over.provisioning.factor=3
    nuxeo.stream.work.log.codec=legacy
    kafka.enabled=true
    kafka.security.protocol=SSL
    kafka.bootstrap.servers=nuxkafka-headless.kafka.svc.cluster.local:9092
    elasticsearch.enabled=true
    elasticsearch.client=RestClient
    #elasticsearch.restClient.username=elastic
    #elasticsearch.restClient.password=changeme
    elasticsearch.clusterName=nuxeotest
    elasticsearch.httpReadOnly.baseUrl=https://vpc-nuxeotest-bztzmj4v3fs7cyvuez4mxc67xe.us-west-2.es.amazonaws.com
    elasticsearch.addressList=https://vpc-nuxeotest-bztzmj4v3fs7cyvuez4mxc67xe.us-west-2.es.amazonaws.com
    elasticsearch.restClient.connectionTimeoutMs=40000
    elasticsearch.restClient.socketTimeoutMs=20000
    elasticsearch.connection.timeout.ms=40000
    elasticsearch.socket.timeout.ms=15000
    nuxeo.templates=default,docker,mongodb,aws
    #nuxeo.template.includes=aws
    #nuxeo.server.https.port=8443
    #nuxeo.server.https.keystoreFile=/opt/nuxeo/certs
    #nuxeo.server.https.keystorePass=changeit
   
    # add any other params that go into nuxeo.conf
  ## Define the configuration for the env variables referenced in nuxeo.conf
  ## custom_envs allows to define an env variable from a key of a ConfigMap
  custom_envs:
  ## custom_envsFrom allows to load the content of a ConfigMap as environment variables
  custom_envsFrom:

## Values from here can be customized https://github.com/helm/charts/blob/master/stable/mongodb/values.yaml
mongodb:
  image:
    tag: 4.0.6
  usePassword: false
  persistence:
    enabled: false
 
## Override values for postgresql from https://github.com/helm/charts/blob/master/stable/postgresql/values.yaml
postgresql:
  image:
    tag: 9.6.11
  initdbScripts:
    db-init.sql: |
      CREATE ROLE nuxeo WITH PASSWORD 'nuxeo' LOGIN;
      CREATE DATABASE nuxeo ENCODING 'UTF8' OWNER nuxeo;
  persistence:
    enabled: false

## Override values from https://github.com/helm/charts/blob/master/stable/elasticsearch/values.yaml
## these are for a staging cluster only, but it needs 2 masters anyway
elasticsearch:
  appVersion: "6.2"
  serviceAccounts:
    client:
      create: false
      name:
    master:
      create: false
      name:
    data:
      create: false
      name:
  client:
    replicas: 1
    resources:
      limits:
        cpu: 1
        memory: 1024Mi
      requests:
        cpu: 25m
        memory: 512Mi
  master:
    replicas: 2
    persistence:
      enabled: false
    resources:
      limits:
        cpu: 1
        memory: 1024Mi
      requests:
        cpu: 25m
        memory: 512Mi
  data:
    replicas: 1
    persistence:
      enabled: false
    resources:
      limits:
        cpu: 1
        memory: 2048Mi
      requests:
        cpu: 25m
        memory: 1536Mi
## Override values from https://github.com/helm/charts/blob/master/incubator/kafka/values.yaml
## staging values only, no need for 3 replicas and zoopkeper ( must be 1, 3, kafla needs zookeper)
## see https://github.com/jenkins-x/jx/issues/2504
kafka:
  replicas: 1
  zookeeper:
    replicaCount: 1
  persistence:
    enabled: false
  prometheus:
    operator:
      enabled: false
  limits:
    cpu: 500m
    memory: 1536Mi
  requests:
    cpu: 300m
    memory: 1024Mi

## These tags are used to control the deployment of these services.
## When this chart is deployed directly, to enable any of these pass these tags as true: helm install nuxeo --set tags.mongodb=true
## When this chart is use as a dependecy in another subchart, than set the variable nuxeo.mongodb.deploy a true

tags:
  mongodb: false
  kafka: false
  elasticsearch: false
  postgresql: false
